---
- name: Pre-run tasks
  include: ../pre_run.yml

- name: Check backup file if exists
  stat:
    path: "{{ automated_docker_gitlab_action_restore_file_path }}"
  register: automated_docker_gitlab_action_restore_is_file_exists

- name: Fail when backup file is not exists
  fail:
    msg: "Backup file in {{ automated_docker_gitlab_action_restore_file_path }} does not exists"
  when: not automated_docker_gitlab_action_restore_is_file_exists.stat.exists

- name: Get backup file name
  set_fact:
    automated_docker_gitlab_action_restore_file_name: "{{ automated_docker_gitlab_action_restore_is_file_exists.stat.path | basename }}"

- name: Copy backup file
  copy:
    src: "{{ automated_docker_gitlab_action_restore_is_file_exists.stat.path }}"
    dest: "{{ automated_docker_gitlab_action_backup_host_path }}/"
  delegate_to: "{{ inventory_hostname }}"

- name: Stop current GitLab container
  docker_container:
    name: "{{ automated_docker_run.name }}"
    state: stopped

- name: Restore container
  docker_container:
    name: "{{ automated_docker_gitlab_action_restore_container_name }}"
    image: "{{ automated_docker_run.image }}"
    command: app:rake gitlab:backup:restore force=yes BACKUP="{{ automated_docker_gitlab_action_restore_file_name.split('_')[0] }}"
    links: "{{ automated_docker_run.links | default(omit) }}"
    env:
      GITLAB_SECRETS_DB_KEY_BASE: "{{ automated_docker_run.env.GITLAB_SECRETS_DB_KEY_BASE }}"
      GITLAB_BACKUP_DIR: "{{ automated_docker_gitlab_action_backup_container_path }}"
    volumes:
      - "{{ automated_docker_gitlab_action_backup_host_path }}:{{ automated_docker_gitlab_action_backup_container_path }}"
    detach: false
    volumes_from: "{{ automated_docker_run.name }}"
    state: started

- name: Remove restore container
  docker_container:
    name: "{{ automated_docker_gitlab_action_restore_container_name }}"
    state: absent

- name: Remove backup file
  file:
    path: "{{ automated_docker_gitlab_action_backup_host_path }}"
    state: absent

- name: Start current GitLab container
  docker_container:
    name: "{{ automated_docker_run.name }}"
    state: started
