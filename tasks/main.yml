---
- name: Pre-check state
  include: pre_check.yml

# TODO Find the better way to run dependency containers with multiple hierarchies

# Need to use ansible_python_interpreter: python to make it work with
# docker-py on virtualenv on local machine
- name: Run all dependency Docker containers state
  include: run.yml
  vars:
    ansible_python_interpreter: python
  environment: "{{ automated_docker_machine_environment | default({}) }}"
  with_dict: "{{ hostvars[inventory_hostname]['automated_docker_container_' + automated_docker_name] | default(automated_docker_container_default) }}"
  when: |
    automated_docker_container.value.links is not defined and
    automated_docker_action is not defined
  loop_control:
    loop_var: automated_docker_container
- name: Run main Docker containers state
  include: run.yml
  vars:
    ansible_python_interpreter: python
  environment: "{{ automated_docker_machine_environment | default({}) }}"
  with_dict: "{{ hostvars[inventory_hostname]['automated_docker_container_' + automated_docker_name] | default(automated_docker_container_default) }}"
  when: |
    automated_docker_container.value.links is not defined and
    automated_docker_action is not defined
  loop_control:
    loop_var: automated_docker_container

# Customize containers after ran
- name: Post containers configuration state
  include: "{{ automated_docker_name }}/{{ automated_docker_name }}_config.yml"
  when: |
    automated_docker_has_post_config.stat.exists == true and
    automated_docker_action is not defined

# For custom action
- name: Run custom action
  include: pre_action.yml
  vars:
    ansible_python_interpreter: python
  environment: "{{ automated_docker_machine_environment | default({}) }}"
  with_dict: "{{ hostvars[inventory_hostname]['automated_docker_container_' + automated_docker_name] | default(automated_docker_container_default) }}"
  when: automated_docker_action is defined
  loop_control:
    loop_var: automated_docker_container
